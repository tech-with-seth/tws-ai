generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    USER
}

model User {
    id         String      @id @default(cuid())
    createdAt  DateTime    @default(now())
    updatedAt  DateTime    @updatedAt
    profile    Profile?
    password   Password?
    email      String      @unique
    threads    Thread[]
    assistants Assistant[]
    files      File[]
    role       Role        @default(USER)
    companies  Company[]
}

model Company {
    id          String   @id @default(cuid())
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    name        String   @unique
    description String?
    users       User[]
}

model Password {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    hash      String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId    String   @unique
}

model Profile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    firstName String
    lastName  String
}

model Assistant {
    id            String   @id @default(cuid())
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    oId           String   @unique
    user          User     @relation(fields: [userId], references: [id])
    userId        String
    name          String   @unique
    slug          String   @unique
    threads       Thread[]
    vectorStoreId String?
}

model Thread {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    oId         String    @unique
    user        User      @relation(fields: [userId], references: [id])
    userId      String
    name        String?   @unique
    slug        String?   @unique
    assistant   Assistant @relation(fields: [assistantId], references: [id], onDelete: Cascade)
    assistantId String
}

model File {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    oId       String   @unique
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    name      String   @unique
    slug      String   @unique
}
